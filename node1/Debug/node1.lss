
node1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000442  000004d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000442  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800106  00800106  000004dc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000050c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000548  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b79  00000000  00000000  000005d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008fa  00000000  00000000  00001149  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000539  00000000  00000000  00001a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000138  00000000  00000000  00001f7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000483  00000000  00000000  000020b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000263  00000000  00000000  00002537  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  0000279a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 e4       	ldi	r30, 0x42	; 66
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 31       	cpi	r26, 0x10	; 16
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 1f 02 	jmp	0x43e	; 0x43e <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#include "uart_lib.h"
#include "sram_lib.h"

int main(void)
{	
	uart_setup();
  ae:	0e 94 82 00 	call	0x104	; 0x104 <uart_setup>
	sram_setup();
  b2:	0e 94 6a 00 	call	0xd4	; 0xd4 <sram_setup>
	//sram_test();
	

	while(1){
		sram_write(((uint16_t) 0x1800), (uint8_t) 0);
  b6:	60 e0       	ldi	r22, 0x00	; 0
  b8:	80 e0       	ldi	r24, 0x00	; 0
  ba:	98 e1       	ldi	r25, 0x18	; 24
  bc:	0e 94 74 00 	call	0xe8	; 0xe8 <sram_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c0:	2f ef       	ldi	r18, 0xFF	; 255
  c2:	8f e7       	ldi	r24, 0x7F	; 127
  c4:	91 e0       	ldi	r25, 0x01	; 1
  c6:	21 50       	subi	r18, 0x01	; 1
  c8:	80 40       	sbci	r24, 0x00	; 0
  ca:	90 40       	sbci	r25, 0x00	; 0
  cc:	e1 f7       	brne	.-8      	; 0xc6 <main+0x18>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <main+0x22>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x24>
  d2:	f1 cf       	rjmp	.-30     	; 0xb6 <main+0x8>

000000d4 <sram_setup>:
#include "sram_lib.h"

void sram_setup(void)
{
    // Enable external memory
    MCUCR |= (1 << SRE) | (1 << SRW10);
  d4:	85 b7       	in	r24, 0x35	; 53
  d6:	80 6c       	ori	r24, 0xC0	; 192
  d8:	85 bf       	out	0x35, r24	; 53
    EMCUCR |= (1 << SRW00) | (1 << SRW01) | (1 << SRW11);
  da:	86 b7       	in	r24, 0x36	; 54
  dc:	8e 60       	ori	r24, 0x0E	; 14
  de:	86 bf       	out	0x36, r24	; 54
    // Mask unused bits
    SFIOR |= (1 << XMM2);
  e0:	80 b7       	in	r24, 0x30	; 48
  e2:	80 62       	ori	r24, 0x20	; 32
  e4:	80 bf       	out	0x30, r24	; 48
  e6:	08 95       	ret

000000e8 <sram_write>:
}

void sram_write(uint16_t address, uint8_t data)
{
    volatile char* ext_ram = (char*)EXRAM_START;
    ext_ram[address] = data;
  e8:	fc 01       	movw	r30, r24
  ea:	60 83       	st	Z, r22
  ec:	08 95       	ret

000000ee <send_character>:
#include "uart_lib.h"

int send_character(char data, FILE * file)
{
	// Wait for available uart to send
	while (!(UCSR1A & (1 << UDRE1)));
  ee:	15 9b       	sbis	0x02, 5	; 2
  f0:	fe cf       	rjmp	.-4      	; 0xee <send_character>
	// Send data
	UDR1 = data;
  f2:	83 b9       	out	0x03, r24	; 3
	return 0;
}
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	08 95       	ret

000000fa <receive_character>:

int receive_character(FILE * file)
{
	// Wait for available data
	while (!(UCSR1A & (1 << RXC1)));
  fa:	17 9b       	sbis	0x02, 7	; 2
  fc:	fe cf       	rjmp	.-4      	; 0xfa <receive_character>
	return UDR1;
  fe:	83 b1       	in	r24, 0x03	; 3
}
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	08 95       	ret

00000104 <uart_setup>:
{
	unsigned long baud = BAUD;
	unsigned long clockspeed = F_CPU;
	unsigned long ubrr = clockspeed/16/baud-1;
	
	UBRR1H = (uint8_t)(ubrr >> 8); // Set baud rate
 104:	1c be       	out	0x3c, r1	; 60
	UBRR1L = (uint8_t)ubrr;
 106:	8f e1       	ldi	r24, 0x1F	; 31
 108:	80 b9       	out	0x00, r24	; 0
	/* Enable receiver and transmitter */
	UCSR1B = (1<<RXEN1)|(1<<TXEN1);
 10a:	88 e1       	ldi	r24, 0x18	; 24
 10c:	81 b9       	out	0x01, r24	; 1
	/* Set frame format: 8 bit data, 2 stop bit */
	UCSR1C = (1<<URSEL1)|(1<<USBS1)|(1<<UCSZ10)|(1<<UCSZ11);
 10e:	8e e8       	ldi	r24, 0x8E	; 142
 110:	8c bf       	out	0x3c, r24	; 60
	
	/*Enable printf */
	fdevopen (send_character, receive_character);
 112:	6d e7       	ldi	r22, 0x7D	; 125
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	87 e7       	ldi	r24, 0x77	; 119
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 90 00 	call	0x120	; 0x120 <fdevopen>
 11e:	08 95       	ret

00000120 <fdevopen>:
 120:	0f 93       	push	r16
 122:	1f 93       	push	r17
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	00 97       	sbiw	r24, 0x00	; 0
 12a:	31 f4       	brne	.+12     	; 0x138 <fdevopen+0x18>
 12c:	61 15       	cp	r22, r1
 12e:	71 05       	cpc	r23, r1
 130:	19 f4       	brne	.+6      	; 0x138 <fdevopen+0x18>
 132:	80 e0       	ldi	r24, 0x00	; 0
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	3a c0       	rjmp	.+116    	; 0x1ac <fdevopen+0x8c>
 138:	8b 01       	movw	r16, r22
 13a:	ec 01       	movw	r28, r24
 13c:	6e e0       	ldi	r22, 0x0E	; 14
 13e:	70 e0       	ldi	r23, 0x00	; 0
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 db 00 	call	0x1b6	; 0x1b6 <calloc>
 148:	fc 01       	movw	r30, r24
 14a:	89 2b       	or	r24, r25
 14c:	91 f3       	breq	.-28     	; 0x132 <fdevopen+0x12>
 14e:	80 e8       	ldi	r24, 0x80	; 128
 150:	83 83       	std	Z+3, r24	; 0x03
 152:	01 15       	cp	r16, r1
 154:	11 05       	cpc	r17, r1
 156:	71 f0       	breq	.+28     	; 0x174 <fdevopen+0x54>
 158:	13 87       	std	Z+11, r17	; 0x0b
 15a:	02 87       	std	Z+10, r16	; 0x0a
 15c:	81 e8       	ldi	r24, 0x81	; 129
 15e:	83 83       	std	Z+3, r24	; 0x03
 160:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 164:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 168:	89 2b       	or	r24, r25
 16a:	21 f4       	brne	.+8      	; 0x174 <fdevopen+0x54>
 16c:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <__data_end+0x1>
 170:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <__data_end>
 174:	20 97       	sbiw	r28, 0x00	; 0
 176:	c9 f0       	breq	.+50     	; 0x1aa <fdevopen+0x8a>
 178:	d1 87       	std	Z+9, r29	; 0x09
 17a:	c0 87       	std	Z+8, r28	; 0x08
 17c:	83 81       	ldd	r24, Z+3	; 0x03
 17e:	82 60       	ori	r24, 0x02	; 2
 180:	83 83       	std	Z+3, r24	; 0x03
 182:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end+0x2>
 186:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x3>
 18a:	89 2b       	or	r24, r25
 18c:	71 f4       	brne	.+28     	; 0x1aa <fdevopen+0x8a>
 18e:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__data_end+0x3>
 192:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__data_end+0x2>
 196:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end+0x4>
 19a:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x5>
 19e:	89 2b       	or	r24, r25
 1a0:	21 f4       	brne	.+8      	; 0x1aa <fdevopen+0x8a>
 1a2:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__data_end+0x5>
 1a6:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__data_end+0x4>
 1aa:	cf 01       	movw	r24, r30
 1ac:	df 91       	pop	r29
 1ae:	cf 91       	pop	r28
 1b0:	1f 91       	pop	r17
 1b2:	0f 91       	pop	r16
 1b4:	08 95       	ret

000001b6 <calloc>:
 1b6:	0f 93       	push	r16
 1b8:	1f 93       	push	r17
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	86 9f       	mul	r24, r22
 1c0:	80 01       	movw	r16, r0
 1c2:	87 9f       	mul	r24, r23
 1c4:	10 0d       	add	r17, r0
 1c6:	96 9f       	mul	r25, r22
 1c8:	10 0d       	add	r17, r0
 1ca:	11 24       	eor	r1, r1
 1cc:	c8 01       	movw	r24, r16
 1ce:	0e 94 f7 00 	call	0x1ee	; 0x1ee <malloc>
 1d2:	ec 01       	movw	r28, r24
 1d4:	00 97       	sbiw	r24, 0x00	; 0
 1d6:	29 f0       	breq	.+10     	; 0x1e2 <calloc+0x2c>
 1d8:	a8 01       	movw	r20, r16
 1da:	60 e0       	ldi	r22, 0x00	; 0
 1dc:	70 e0       	ldi	r23, 0x00	; 0
 1de:	0e 94 18 02 	call	0x430	; 0x430 <memset>
 1e2:	ce 01       	movw	r24, r28
 1e4:	df 91       	pop	r29
 1e6:	cf 91       	pop	r28
 1e8:	1f 91       	pop	r17
 1ea:	0f 91       	pop	r16
 1ec:	08 95       	ret

000001ee <malloc>:
 1ee:	0f 93       	push	r16
 1f0:	1f 93       	push	r17
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	82 30       	cpi	r24, 0x02	; 2
 1f8:	91 05       	cpc	r25, r1
 1fa:	10 f4       	brcc	.+4      	; 0x200 <__EEPROM_REGION_LENGTH__>
 1fc:	82 e0       	ldi	r24, 0x02	; 2
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <__flp>
 204:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <__flp+0x1>
 208:	20 e0       	ldi	r18, 0x00	; 0
 20a:	30 e0       	ldi	r19, 0x00	; 0
 20c:	a0 e0       	ldi	r26, 0x00	; 0
 20e:	b0 e0       	ldi	r27, 0x00	; 0
 210:	30 97       	sbiw	r30, 0x00	; 0
 212:	19 f1       	breq	.+70     	; 0x25a <__EEPROM_REGION_LENGTH__+0x5a>
 214:	40 81       	ld	r20, Z
 216:	51 81       	ldd	r21, Z+1	; 0x01
 218:	02 81       	ldd	r16, Z+2	; 0x02
 21a:	13 81       	ldd	r17, Z+3	; 0x03
 21c:	48 17       	cp	r20, r24
 21e:	59 07       	cpc	r21, r25
 220:	c8 f0       	brcs	.+50     	; 0x254 <__EEPROM_REGION_LENGTH__+0x54>
 222:	84 17       	cp	r24, r20
 224:	95 07       	cpc	r25, r21
 226:	69 f4       	brne	.+26     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
 228:	10 97       	sbiw	r26, 0x00	; 0
 22a:	31 f0       	breq	.+12     	; 0x238 <__EEPROM_REGION_LENGTH__+0x38>
 22c:	12 96       	adiw	r26, 0x02	; 2
 22e:	0c 93       	st	X, r16
 230:	12 97       	sbiw	r26, 0x02	; 2
 232:	13 96       	adiw	r26, 0x03	; 3
 234:	1c 93       	st	X, r17
 236:	27 c0       	rjmp	.+78     	; 0x286 <__EEPROM_REGION_LENGTH__+0x86>
 238:	00 93 0e 01 	sts	0x010E, r16	; 0x80010e <__flp>
 23c:	10 93 0f 01 	sts	0x010F, r17	; 0x80010f <__flp+0x1>
 240:	22 c0       	rjmp	.+68     	; 0x286 <__EEPROM_REGION_LENGTH__+0x86>
 242:	21 15       	cp	r18, r1
 244:	31 05       	cpc	r19, r1
 246:	19 f0       	breq	.+6      	; 0x24e <__EEPROM_REGION_LENGTH__+0x4e>
 248:	42 17       	cp	r20, r18
 24a:	53 07       	cpc	r21, r19
 24c:	18 f4       	brcc	.+6      	; 0x254 <__EEPROM_REGION_LENGTH__+0x54>
 24e:	9a 01       	movw	r18, r20
 250:	bd 01       	movw	r22, r26
 252:	ef 01       	movw	r28, r30
 254:	df 01       	movw	r26, r30
 256:	f8 01       	movw	r30, r16
 258:	db cf       	rjmp	.-74     	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
 25a:	21 15       	cp	r18, r1
 25c:	31 05       	cpc	r19, r1
 25e:	f9 f0       	breq	.+62     	; 0x29e <__EEPROM_REGION_LENGTH__+0x9e>
 260:	28 1b       	sub	r18, r24
 262:	39 0b       	sbc	r19, r25
 264:	24 30       	cpi	r18, 0x04	; 4
 266:	31 05       	cpc	r19, r1
 268:	80 f4       	brcc	.+32     	; 0x28a <__EEPROM_REGION_LENGTH__+0x8a>
 26a:	8a 81       	ldd	r24, Y+2	; 0x02
 26c:	9b 81       	ldd	r25, Y+3	; 0x03
 26e:	61 15       	cp	r22, r1
 270:	71 05       	cpc	r23, r1
 272:	21 f0       	breq	.+8      	; 0x27c <__EEPROM_REGION_LENGTH__+0x7c>
 274:	fb 01       	movw	r30, r22
 276:	93 83       	std	Z+3, r25	; 0x03
 278:	82 83       	std	Z+2, r24	; 0x02
 27a:	04 c0       	rjmp	.+8      	; 0x284 <__EEPROM_REGION_LENGTH__+0x84>
 27c:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <__flp+0x1>
 280:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__flp>
 284:	fe 01       	movw	r30, r28
 286:	32 96       	adiw	r30, 0x02	; 2
 288:	44 c0       	rjmp	.+136    	; 0x312 <__EEPROM_REGION_LENGTH__+0x112>
 28a:	fe 01       	movw	r30, r28
 28c:	e2 0f       	add	r30, r18
 28e:	f3 1f       	adc	r31, r19
 290:	81 93       	st	Z+, r24
 292:	91 93       	st	Z+, r25
 294:	22 50       	subi	r18, 0x02	; 2
 296:	31 09       	sbc	r19, r1
 298:	39 83       	std	Y+1, r19	; 0x01
 29a:	28 83       	st	Y, r18
 29c:	3a c0       	rjmp	.+116    	; 0x312 <__EEPROM_REGION_LENGTH__+0x112>
 29e:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 2a2:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 2a6:	23 2b       	or	r18, r19
 2a8:	41 f4       	brne	.+16     	; 0x2ba <__EEPROM_REGION_LENGTH__+0xba>
 2aa:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 2ae:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 2b2:	30 93 0d 01 	sts	0x010D, r19	; 0x80010d <__brkval+0x1>
 2b6:	20 93 0c 01 	sts	0x010C, r18	; 0x80010c <__brkval>
 2ba:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2be:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2c2:	21 15       	cp	r18, r1
 2c4:	31 05       	cpc	r19, r1
 2c6:	41 f4       	brne	.+16     	; 0x2d8 <__EEPROM_REGION_LENGTH__+0xd8>
 2c8:	2d b7       	in	r18, 0x3d	; 61
 2ca:	3e b7       	in	r19, 0x3e	; 62
 2cc:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 2d0:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 2d4:	24 1b       	sub	r18, r20
 2d6:	35 0b       	sbc	r19, r21
 2d8:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__brkval>
 2dc:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__brkval+0x1>
 2e0:	e2 17       	cp	r30, r18
 2e2:	f3 07       	cpc	r31, r19
 2e4:	a0 f4       	brcc	.+40     	; 0x30e <__EEPROM_REGION_LENGTH__+0x10e>
 2e6:	2e 1b       	sub	r18, r30
 2e8:	3f 0b       	sbc	r19, r31
 2ea:	28 17       	cp	r18, r24
 2ec:	39 07       	cpc	r19, r25
 2ee:	78 f0       	brcs	.+30     	; 0x30e <__EEPROM_REGION_LENGTH__+0x10e>
 2f0:	ac 01       	movw	r20, r24
 2f2:	4e 5f       	subi	r20, 0xFE	; 254
 2f4:	5f 4f       	sbci	r21, 0xFF	; 255
 2f6:	24 17       	cp	r18, r20
 2f8:	35 07       	cpc	r19, r21
 2fa:	48 f0       	brcs	.+18     	; 0x30e <__EEPROM_REGION_LENGTH__+0x10e>
 2fc:	4e 0f       	add	r20, r30
 2fe:	5f 1f       	adc	r21, r31
 300:	50 93 0d 01 	sts	0x010D, r21	; 0x80010d <__brkval+0x1>
 304:	40 93 0c 01 	sts	0x010C, r20	; 0x80010c <__brkval>
 308:	81 93       	st	Z+, r24
 30a:	91 93       	st	Z+, r25
 30c:	02 c0       	rjmp	.+4      	; 0x312 <__EEPROM_REGION_LENGTH__+0x112>
 30e:	e0 e0       	ldi	r30, 0x00	; 0
 310:	f0 e0       	ldi	r31, 0x00	; 0
 312:	cf 01       	movw	r24, r30
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	1f 91       	pop	r17
 31a:	0f 91       	pop	r16
 31c:	08 95       	ret

0000031e <free>:
 31e:	cf 93       	push	r28
 320:	df 93       	push	r29
 322:	00 97       	sbiw	r24, 0x00	; 0
 324:	09 f4       	brne	.+2      	; 0x328 <free+0xa>
 326:	81 c0       	rjmp	.+258    	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 328:	fc 01       	movw	r30, r24
 32a:	32 97       	sbiw	r30, 0x02	; 2
 32c:	13 82       	std	Z+3, r1	; 0x03
 32e:	12 82       	std	Z+2, r1	; 0x02
 330:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <__flp>
 334:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <__flp+0x1>
 338:	10 97       	sbiw	r26, 0x00	; 0
 33a:	81 f4       	brne	.+32     	; 0x35c <free+0x3e>
 33c:	20 81       	ld	r18, Z
 33e:	31 81       	ldd	r19, Z+1	; 0x01
 340:	82 0f       	add	r24, r18
 342:	93 1f       	adc	r25, r19
 344:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 348:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 34c:	28 17       	cp	r18, r24
 34e:	39 07       	cpc	r19, r25
 350:	51 f5       	brne	.+84     	; 0x3a6 <free+0x88>
 352:	f0 93 0d 01 	sts	0x010D, r31	; 0x80010d <__brkval+0x1>
 356:	e0 93 0c 01 	sts	0x010C, r30	; 0x80010c <__brkval>
 35a:	67 c0       	rjmp	.+206    	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 35c:	ed 01       	movw	r28, r26
 35e:	20 e0       	ldi	r18, 0x00	; 0
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	ce 17       	cp	r28, r30
 364:	df 07       	cpc	r29, r31
 366:	40 f4       	brcc	.+16     	; 0x378 <free+0x5a>
 368:	4a 81       	ldd	r20, Y+2	; 0x02
 36a:	5b 81       	ldd	r21, Y+3	; 0x03
 36c:	9e 01       	movw	r18, r28
 36e:	41 15       	cp	r20, r1
 370:	51 05       	cpc	r21, r1
 372:	f1 f0       	breq	.+60     	; 0x3b0 <free+0x92>
 374:	ea 01       	movw	r28, r20
 376:	f5 cf       	rjmp	.-22     	; 0x362 <free+0x44>
 378:	d3 83       	std	Z+3, r29	; 0x03
 37a:	c2 83       	std	Z+2, r28	; 0x02
 37c:	40 81       	ld	r20, Z
 37e:	51 81       	ldd	r21, Z+1	; 0x01
 380:	84 0f       	add	r24, r20
 382:	95 1f       	adc	r25, r21
 384:	c8 17       	cp	r28, r24
 386:	d9 07       	cpc	r29, r25
 388:	59 f4       	brne	.+22     	; 0x3a0 <free+0x82>
 38a:	88 81       	ld	r24, Y
 38c:	99 81       	ldd	r25, Y+1	; 0x01
 38e:	84 0f       	add	r24, r20
 390:	95 1f       	adc	r25, r21
 392:	02 96       	adiw	r24, 0x02	; 2
 394:	91 83       	std	Z+1, r25	; 0x01
 396:	80 83       	st	Z, r24
 398:	8a 81       	ldd	r24, Y+2	; 0x02
 39a:	9b 81       	ldd	r25, Y+3	; 0x03
 39c:	93 83       	std	Z+3, r25	; 0x03
 39e:	82 83       	std	Z+2, r24	; 0x02
 3a0:	21 15       	cp	r18, r1
 3a2:	31 05       	cpc	r19, r1
 3a4:	29 f4       	brne	.+10     	; 0x3b0 <free+0x92>
 3a6:	f0 93 0f 01 	sts	0x010F, r31	; 0x80010f <__flp+0x1>
 3aa:	e0 93 0e 01 	sts	0x010E, r30	; 0x80010e <__flp>
 3ae:	3d c0       	rjmp	.+122    	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 3b0:	e9 01       	movw	r28, r18
 3b2:	fb 83       	std	Y+3, r31	; 0x03
 3b4:	ea 83       	std	Y+2, r30	; 0x02
 3b6:	49 91       	ld	r20, Y+
 3b8:	59 91       	ld	r21, Y+
 3ba:	c4 0f       	add	r28, r20
 3bc:	d5 1f       	adc	r29, r21
 3be:	ec 17       	cp	r30, r28
 3c0:	fd 07       	cpc	r31, r29
 3c2:	61 f4       	brne	.+24     	; 0x3dc <free+0xbe>
 3c4:	80 81       	ld	r24, Z
 3c6:	91 81       	ldd	r25, Z+1	; 0x01
 3c8:	84 0f       	add	r24, r20
 3ca:	95 1f       	adc	r25, r21
 3cc:	02 96       	adiw	r24, 0x02	; 2
 3ce:	e9 01       	movw	r28, r18
 3d0:	99 83       	std	Y+1, r25	; 0x01
 3d2:	88 83       	st	Y, r24
 3d4:	82 81       	ldd	r24, Z+2	; 0x02
 3d6:	93 81       	ldd	r25, Z+3	; 0x03
 3d8:	9b 83       	std	Y+3, r25	; 0x03
 3da:	8a 83       	std	Y+2, r24	; 0x02
 3dc:	e0 e0       	ldi	r30, 0x00	; 0
 3de:	f0 e0       	ldi	r31, 0x00	; 0
 3e0:	12 96       	adiw	r26, 0x02	; 2
 3e2:	8d 91       	ld	r24, X+
 3e4:	9c 91       	ld	r25, X
 3e6:	13 97       	sbiw	r26, 0x03	; 3
 3e8:	00 97       	sbiw	r24, 0x00	; 0
 3ea:	19 f0       	breq	.+6      	; 0x3f2 <free+0xd4>
 3ec:	fd 01       	movw	r30, r26
 3ee:	dc 01       	movw	r26, r24
 3f0:	f7 cf       	rjmp	.-18     	; 0x3e0 <free+0xc2>
 3f2:	8d 91       	ld	r24, X+
 3f4:	9c 91       	ld	r25, X
 3f6:	11 97       	sbiw	r26, 0x01	; 1
 3f8:	9d 01       	movw	r18, r26
 3fa:	2e 5f       	subi	r18, 0xFE	; 254
 3fc:	3f 4f       	sbci	r19, 0xFF	; 255
 3fe:	82 0f       	add	r24, r18
 400:	93 1f       	adc	r25, r19
 402:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 406:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 40a:	28 17       	cp	r18, r24
 40c:	39 07       	cpc	r19, r25
 40e:	69 f4       	brne	.+26     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 410:	30 97       	sbiw	r30, 0x00	; 0
 412:	29 f4       	brne	.+10     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 414:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__flp+0x1>
 418:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__flp>
 41c:	02 c0       	rjmp	.+4      	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 41e:	13 82       	std	Z+3, r1	; 0x03
 420:	12 82       	std	Z+2, r1	; 0x02
 422:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <__brkval+0x1>
 426:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <__brkval>
 42a:	df 91       	pop	r29
 42c:	cf 91       	pop	r28
 42e:	08 95       	ret

00000430 <memset>:
 430:	dc 01       	movw	r26, r24
 432:	01 c0       	rjmp	.+2      	; 0x436 <memset+0x6>
 434:	6d 93       	st	X+, r22
 436:	41 50       	subi	r20, 0x01	; 1
 438:	50 40       	sbci	r21, 0x00	; 0
 43a:	e0 f7       	brcc	.-8      	; 0x434 <memset+0x4>
 43c:	08 95       	ret

0000043e <_exit>:
 43e:	f8 94       	cli

00000440 <__stop_program>:
 440:	ff cf       	rjmp	.-2      	; 0x440 <__stop_program>
